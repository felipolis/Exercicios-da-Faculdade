// source: movies.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Awards', null, global);
goog.exportSymbol('proto.CreateMovieRequest', null, global);
goog.exportSymbol('proto.CreateMovieResponse', null, global);
goog.exportSymbol('proto.DeleteMovieRequest', null, global);
goog.exportSymbol('proto.DeleteMovieResponse', null, global);
goog.exportSymbol('proto.GetMovieRequest', null, global);
goog.exportSymbol('proto.GetMovieResponse', null, global);
goog.exportSymbol('proto.GetMoviesByActorRequest', null, global);
goog.exportSymbol('proto.GetMoviesByActorResponse', null, global);
goog.exportSymbol('proto.GetMoviesByCategoryRequest', null, global);
goog.exportSymbol('proto.GetMoviesByCategoryResponse', null, global);
goog.exportSymbol('proto.Movie', null, global);
goog.exportSymbol('proto.UpdateMovieRequest', null, global);
goog.exportSymbol('proto.UpdateMovieResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Awards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Awards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Awards.displayName = 'proto.Awards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Movie = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Movie.repeatedFields_, null);
};
goog.inherits(proto.Movie, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Movie.displayName = 'proto.Movie';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CreateMovieRequest.repeatedFields_, null);
};
goog.inherits(proto.CreateMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateMovieRequest.displayName = 'proto.CreateMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateMovieResponse.displayName = 'proto.CreateMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UpdateMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.UpdateMovieRequest.repeatedFields_, null);
};
goog.inherits(proto.UpdateMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UpdateMovieRequest.displayName = 'proto.UpdateMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UpdateMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UpdateMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UpdateMovieResponse.displayName = 'proto.UpdateMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetMovieRequest.displayName = 'proto.GetMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetMovieResponse.displayName = 'proto.GetMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeleteMovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DeleteMovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DeleteMovieRequest.displayName = 'proto.DeleteMovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeleteMovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DeleteMovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DeleteMovieResponse.displayName = 'proto.DeleteMovieResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetMoviesByActorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetMoviesByActorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetMoviesByActorRequest.displayName = 'proto.GetMoviesByActorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetMoviesByActorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GetMoviesByActorResponse.repeatedFields_, null);
};
goog.inherits(proto.GetMoviesByActorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetMoviesByActorResponse.displayName = 'proto.GetMoviesByActorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetMoviesByCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GetMoviesByCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetMoviesByCategoryRequest.displayName = 'proto.GetMoviesByCategoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GetMoviesByCategoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GetMoviesByCategoryResponse.repeatedFields_, null);
};
goog.inherits(proto.GetMoviesByCategoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GetMoviesByCategoryResponse.displayName = 'proto.GetMoviesByCategoryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Awards.prototype.toObject = function(opt_includeInstance) {
  return proto.Awards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Awards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Awards.toObject = function(includeInstance, msg) {
  var f, obj = {
    wins: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nominations: jspb.Message.getFieldWithDefault(msg, 2, 0),
    text: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Awards}
 */
proto.Awards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Awards;
  return proto.Awards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Awards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Awards}
 */
proto.Awards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWins(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNominations(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Awards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Awards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Awards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Awards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWins();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNominations();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 wins = 1;
 * @return {number}
 */
proto.Awards.prototype.getWins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Awards} returns this
 */
proto.Awards.prototype.setWins = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 nominations = 2;
 * @return {number}
 */
proto.Awards.prototype.getNominations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Awards} returns this
 */
proto.Awards.prototype.setNominations = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string text = 3;
 * @return {string}
 */
proto.Awards.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Awards} returns this
 */
proto.Awards.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Movie.repeatedFields_ = [3,5,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Movie.prototype.toObject = function(opt_includeInstance) {
  return proto.Movie.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Movie} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Movie.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    plot: jspb.Message.getFieldWithDefault(msg, 2, ""),
    genresList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    runtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    castList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    numMflixComments: jspb.Message.getFieldWithDefault(msg, 6, 0),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fullplot: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countriesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    directorsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    rated: jspb.Message.getFieldWithDefault(msg, 11, ""),
    awards: (f = msg.getAwards()) && proto.Awards.toObject(includeInstance, f),
    year: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Movie}
 */
proto.Movie.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Movie;
  return proto.Movie.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Movie} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Movie}
 */
proto.Movie.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlot(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addGenres(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRuntime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCast(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumMflixComments(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullplot(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addDirectors(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRated(value);
      break;
    case 12:
      var value = new proto.Awards;
      reader.readMessage(value,proto.Awards.deserializeBinaryFromReader);
      msg.setAwards(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Movie.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Movie.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Movie} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Movie.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlot();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGenresList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRuntime();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCastList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getNumMflixComments();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFullplot();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getDirectorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getRated();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAwards();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.Awards.serializeBinaryToWriter
    );
  }
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Movie.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string plot = 2;
 * @return {string}
 */
proto.Movie.prototype.getPlot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setPlot = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string genres = 3;
 * @return {!Array<string>}
 */
proto.Movie.prototype.getGenresList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setGenresList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.addGenres = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearGenresList = function() {
  return this.setGenresList([]);
};


/**
 * optional int32 runtime = 4;
 * @return {number}
 */
proto.Movie.prototype.getRuntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setRuntime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string cast = 5;
 * @return {!Array<string>}
 */
proto.Movie.prototype.getCastList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setCastList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.addCast = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearCastList = function() {
  return this.setCastList([]);
};


/**
 * optional int32 num_mflix_comments = 6;
 * @return {number}
 */
proto.Movie.prototype.getNumMflixComments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setNumMflixComments = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.Movie.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string fullplot = 8;
 * @return {string}
 */
proto.Movie.prototype.getFullplot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setFullplot = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated string countries = 9;
 * @return {!Array<string>}
 */
proto.Movie.prototype.getCountriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setCountriesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.addCountries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};


/**
 * repeated string directors = 10;
 * @return {!Array<string>}
 */
proto.Movie.prototype.getDirectorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setDirectorsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.addDirectors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearDirectorsList = function() {
  return this.setDirectorsList([]);
};


/**
 * optional string rated = 11;
 * @return {string}
 */
proto.Movie.prototype.getRated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setRated = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional Awards awards = 12;
 * @return {?proto.Awards}
 */
proto.Movie.prototype.getAwards = function() {
  return /** @type{?proto.Awards} */ (
    jspb.Message.getWrapperField(this, proto.Awards, 12));
};


/**
 * @param {?proto.Awards|undefined} value
 * @return {!proto.Movie} returns this
*/
proto.Movie.prototype.setAwards = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.clearAwards = function() {
  return this.setAwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Movie.prototype.hasAwards = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 year = 13;
 * @return {number}
 */
proto.Movie.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.Movie} returns this
 */
proto.Movie.prototype.setYear = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CreateMovieRequest.repeatedFields_ = [2,4,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    plot: jspb.Message.getFieldWithDefault(msg, 1, ""),
    genresList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    runtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    castList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    numMflixComments: jspb.Message.getFieldWithDefault(msg, 5, 0),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fullplot: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countriesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    directorsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    rated: jspb.Message.getFieldWithDefault(msg, 10, ""),
    awards: (f = msg.getAwards()) && proto.Awards.toObject(includeInstance, f),
    year: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateMovieRequest}
 */
proto.CreateMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateMovieRequest;
  return proto.CreateMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateMovieRequest}
 */
proto.CreateMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addGenres(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRuntime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCast(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumMflixComments(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullplot(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addDirectors(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRated(value);
      break;
    case 11:
      var value = new proto.Awards;
      reader.readMessage(value,proto.Awards.deserializeBinaryFromReader);
      msg.setAwards(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlot();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGenresList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRuntime();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCastList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getNumMflixComments();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFullplot();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getDirectorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getRated();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAwards();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.Awards.serializeBinaryToWriter
    );
  }
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional string plot = 1;
 * @return {string}
 */
proto.CreateMovieRequest.prototype.getPlot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setPlot = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string genres = 2;
 * @return {!Array<string>}
 */
proto.CreateMovieRequest.prototype.getGenresList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setGenresList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.addGenres = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.clearGenresList = function() {
  return this.setGenresList([]);
};


/**
 * optional int32 runtime = 3;
 * @return {number}
 */
proto.CreateMovieRequest.prototype.getRuntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setRuntime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string cast = 4;
 * @return {!Array<string>}
 */
proto.CreateMovieRequest.prototype.getCastList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setCastList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.addCast = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.clearCastList = function() {
  return this.setCastList([]);
};


/**
 * optional int32 num_mflix_comments = 5;
 * @return {number}
 */
proto.CreateMovieRequest.prototype.getNumMflixComments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setNumMflixComments = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.CreateMovieRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string fullplot = 7;
 * @return {string}
 */
proto.CreateMovieRequest.prototype.getFullplot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setFullplot = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string countries = 8;
 * @return {!Array<string>}
 */
proto.CreateMovieRequest.prototype.getCountriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setCountriesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.addCountries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};


/**
 * repeated string directors = 9;
 * @return {!Array<string>}
 */
proto.CreateMovieRequest.prototype.getDirectorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setDirectorsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.addDirectors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.clearDirectorsList = function() {
  return this.setDirectorsList([]);
};


/**
 * optional string rated = 10;
 * @return {string}
 */
proto.CreateMovieRequest.prototype.getRated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setRated = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional Awards awards = 11;
 * @return {?proto.Awards}
 */
proto.CreateMovieRequest.prototype.getAwards = function() {
  return /** @type{?proto.Awards} */ (
    jspb.Message.getWrapperField(this, proto.Awards, 11));
};


/**
 * @param {?proto.Awards|undefined} value
 * @return {!proto.CreateMovieRequest} returns this
*/
proto.CreateMovieRequest.prototype.setAwards = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.clearAwards = function() {
  return this.setAwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateMovieRequest.prototype.hasAwards = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 year = 12;
 * @return {number}
 */
proto.CreateMovieRequest.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.CreateMovieRequest} returns this
 */
proto.CreateMovieRequest.prototype.setYear = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateMovieResponse}
 */
proto.CreateMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateMovieResponse;
  return proto.CreateMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateMovieResponse}
 */
proto.CreateMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.CreateMovieResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CreateMovieResponse} returns this
 */
proto.CreateMovieResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.CreateMovieResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateMovieResponse} returns this
 */
proto.CreateMovieResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.UpdateMovieRequest.repeatedFields_ = [3,5,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UpdateMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.UpdateMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UpdateMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpdateMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    movieId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    plot: jspb.Message.getFieldWithDefault(msg, 2, ""),
    genresList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    runtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    castList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    numMflixComments: jspb.Message.getFieldWithDefault(msg, 6, 0),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fullplot: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countriesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    directorsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    rated: jspb.Message.getFieldWithDefault(msg, 11, ""),
    awards: (f = msg.getAwards()) && proto.Awards.toObject(includeInstance, f),
    year: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UpdateMovieRequest}
 */
proto.UpdateMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UpdateMovieRequest;
  return proto.UpdateMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UpdateMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UpdateMovieRequest}
 */
proto.UpdateMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovieId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlot(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addGenres(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRuntime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCast(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumMflixComments(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullplot(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addDirectors(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRated(value);
      break;
    case 12:
      var value = new proto.Awards;
      reader.readMessage(value,proto.Awards.deserializeBinaryFromReader);
      msg.setAwards(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UpdateMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UpdateMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UpdateMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpdateMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovieId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGenresList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCastList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getDirectorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAwards();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.Awards.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional string movie_id = 1;
 * @return {string}
 */
proto.UpdateMovieRequest.prototype.getMovieId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setMovieId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string plot = 2;
 * @return {string}
 */
proto.UpdateMovieRequest.prototype.getPlot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setPlot = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearPlot = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasPlot = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string genres = 3;
 * @return {!Array<string>}
 */
proto.UpdateMovieRequest.prototype.getGenresList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setGenresList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.addGenres = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearGenresList = function() {
  return this.setGenresList([]);
};


/**
 * optional int32 runtime = 4;
 * @return {number}
 */
proto.UpdateMovieRequest.prototype.getRuntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setRuntime = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearRuntime = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasRuntime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string cast = 5;
 * @return {!Array<string>}
 */
proto.UpdateMovieRequest.prototype.getCastList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setCastList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.addCast = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearCastList = function() {
  return this.setCastList([]);
};


/**
 * optional int32 num_mflix_comments = 6;
 * @return {number}
 */
proto.UpdateMovieRequest.prototype.getNumMflixComments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setNumMflixComments = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearNumMflixComments = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasNumMflixComments = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.UpdateMovieRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setTitle = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearTitle = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string fullplot = 8;
 * @return {string}
 */
proto.UpdateMovieRequest.prototype.getFullplot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setFullplot = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearFullplot = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasFullplot = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated string countries = 9;
 * @return {!Array<string>}
 */
proto.UpdateMovieRequest.prototype.getCountriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setCountriesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.addCountries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};


/**
 * repeated string directors = 10;
 * @return {!Array<string>}
 */
proto.UpdateMovieRequest.prototype.getDirectorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setDirectorsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.addDirectors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearDirectorsList = function() {
  return this.setDirectorsList([]);
};


/**
 * optional string rated = 11;
 * @return {string}
 */
proto.UpdateMovieRequest.prototype.getRated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setRated = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearRated = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasRated = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Awards awards = 12;
 * @return {?proto.Awards}
 */
proto.UpdateMovieRequest.prototype.getAwards = function() {
  return /** @type{?proto.Awards} */ (
    jspb.Message.getWrapperField(this, proto.Awards, 12));
};


/**
 * @param {?proto.Awards|undefined} value
 * @return {!proto.UpdateMovieRequest} returns this
*/
proto.UpdateMovieRequest.prototype.setAwards = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearAwards = function() {
  return this.setAwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasAwards = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 year = 13;
 * @return {number}
 */
proto.UpdateMovieRequest.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.setYear = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpdateMovieRequest} returns this
 */
proto.UpdateMovieRequest.prototype.clearYear = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpdateMovieRequest.prototype.hasYear = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UpdateMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.UpdateMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UpdateMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpdateMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UpdateMovieResponse}
 */
proto.UpdateMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UpdateMovieResponse;
  return proto.UpdateMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UpdateMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UpdateMovieResponse}
 */
proto.UpdateMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UpdateMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UpdateMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UpdateMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpdateMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.UpdateMovieResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpdateMovieResponse} returns this
 */
proto.UpdateMovieResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.UpdateMovieResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.UpdateMovieResponse} returns this
 */
proto.UpdateMovieResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.GetMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    movieId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetMovieRequest}
 */
proto.GetMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetMovieRequest;
  return proto.GetMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetMovieRequest}
 */
proto.GetMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovieId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovieId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string movie_id = 1;
 * @return {string}
 */
proto.GetMovieRequest.prototype.getMovieId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.GetMovieRequest} returns this
 */
proto.GetMovieRequest.prototype.setMovieId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.GetMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    movie: (f = msg.getMovie()) && proto.Movie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetMovieResponse}
 */
proto.GetMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetMovieResponse;
  return proto.GetMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetMovieResponse}
 */
proto.GetMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Movie;
      reader.readMessage(value,proto.Movie.deserializeBinaryFromReader);
      msg.setMovie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMovie();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.GetMovieResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.GetMovieResponse} returns this
 */
proto.GetMovieResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Movie movie = 2;
 * @return {?proto.Movie}
 */
proto.GetMovieResponse.prototype.getMovie = function() {
  return /** @type{?proto.Movie} */ (
    jspb.Message.getWrapperField(this, proto.Movie, 2));
};


/**
 * @param {?proto.Movie|undefined} value
 * @return {!proto.GetMovieResponse} returns this
*/
proto.GetMovieResponse.prototype.setMovie = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GetMovieResponse} returns this
 */
proto.GetMovieResponse.prototype.clearMovie = function() {
  return this.setMovie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GetMovieResponse.prototype.hasMovie = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DeleteMovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DeleteMovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DeleteMovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteMovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    movieId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeleteMovieRequest}
 */
proto.DeleteMovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DeleteMovieRequest;
  return proto.DeleteMovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeleteMovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeleteMovieRequest}
 */
proto.DeleteMovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMovieId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeleteMovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DeleteMovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeleteMovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteMovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMovieId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string movie_id = 1;
 * @return {string}
 */
proto.DeleteMovieRequest.prototype.getMovieId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.DeleteMovieRequest} returns this
 */
proto.DeleteMovieRequest.prototype.setMovieId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DeleteMovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DeleteMovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DeleteMovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteMovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeleteMovieResponse}
 */
proto.DeleteMovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DeleteMovieResponse;
  return proto.DeleteMovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeleteMovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeleteMovieResponse}
 */
proto.DeleteMovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeleteMovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DeleteMovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeleteMovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteMovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.DeleteMovieResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DeleteMovieResponse} returns this
 */
proto.DeleteMovieResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.DeleteMovieResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DeleteMovieResponse} returns this
 */
proto.DeleteMovieResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetMoviesByActorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.GetMoviesByActorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetMoviesByActorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByActorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    actor: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetMoviesByActorRequest}
 */
proto.GetMoviesByActorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetMoviesByActorRequest;
  return proto.GetMoviesByActorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetMoviesByActorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetMoviesByActorRequest}
 */
proto.GetMoviesByActorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetMoviesByActorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetMoviesByActorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetMoviesByActorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByActorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string actor = 1;
 * @return {string}
 */
proto.GetMoviesByActorRequest.prototype.getActor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.GetMoviesByActorRequest} returns this
 */
proto.GetMoviesByActorRequest.prototype.setActor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GetMoviesByActorResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetMoviesByActorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.GetMoviesByActorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetMoviesByActorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByActorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    moviesList: jspb.Message.toObjectList(msg.getMoviesList(),
    proto.Movie.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetMoviesByActorResponse}
 */
proto.GetMoviesByActorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetMoviesByActorResponse;
  return proto.GetMoviesByActorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetMoviesByActorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetMoviesByActorResponse}
 */
proto.GetMoviesByActorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Movie;
      reader.readMessage(value,proto.Movie.deserializeBinaryFromReader);
      msg.addMovies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetMoviesByActorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetMoviesByActorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetMoviesByActorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByActorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMoviesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.GetMoviesByActorResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.GetMoviesByActorResponse} returns this
 */
proto.GetMoviesByActorResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Movie movies = 2;
 * @return {!Array<!proto.Movie>}
 */
proto.GetMoviesByActorResponse.prototype.getMoviesList = function() {
  return /** @type{!Array<!proto.Movie>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Movie, 2));
};


/**
 * @param {!Array<!proto.Movie>} value
 * @return {!proto.GetMoviesByActorResponse} returns this
*/
proto.GetMoviesByActorResponse.prototype.setMoviesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Movie=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Movie}
 */
proto.GetMoviesByActorResponse.prototype.addMovies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Movie, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GetMoviesByActorResponse} returns this
 */
proto.GetMoviesByActorResponse.prototype.clearMoviesList = function() {
  return this.setMoviesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetMoviesByCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.GetMoviesByCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetMoviesByCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetMoviesByCategoryRequest}
 */
proto.GetMoviesByCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetMoviesByCategoryRequest;
  return proto.GetMoviesByCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetMoviesByCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetMoviesByCategoryRequest}
 */
proto.GetMoviesByCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetMoviesByCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetMoviesByCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetMoviesByCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string category = 1;
 * @return {string}
 */
proto.GetMoviesByCategoryRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.GetMoviesByCategoryRequest} returns this
 */
proto.GetMoviesByCategoryRequest.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GetMoviesByCategoryResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GetMoviesByCategoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.GetMoviesByCategoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GetMoviesByCategoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByCategoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    moviesList: jspb.Message.toObjectList(msg.getMoviesList(),
    proto.Movie.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GetMoviesByCategoryResponse}
 */
proto.GetMoviesByCategoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GetMoviesByCategoryResponse;
  return proto.GetMoviesByCategoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GetMoviesByCategoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GetMoviesByCategoryResponse}
 */
proto.GetMoviesByCategoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Movie;
      reader.readMessage(value,proto.Movie.deserializeBinaryFromReader);
      msg.addMovies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GetMoviesByCategoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GetMoviesByCategoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GetMoviesByCategoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GetMoviesByCategoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMoviesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Movie.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.GetMoviesByCategoryResponse.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.GetMoviesByCategoryResponse} returns this
 */
proto.GetMoviesByCategoryResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Movie movies = 2;
 * @return {!Array<!proto.Movie>}
 */
proto.GetMoviesByCategoryResponse.prototype.getMoviesList = function() {
  return /** @type{!Array<!proto.Movie>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Movie, 2));
};


/**
 * @param {!Array<!proto.Movie>} value
 * @return {!proto.GetMoviesByCategoryResponse} returns this
*/
proto.GetMoviesByCategoryResponse.prototype.setMoviesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Movie=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Movie}
 */
proto.GetMoviesByCategoryResponse.prototype.addMovies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Movie, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GetMoviesByCategoryResponse} returns this
 */
proto.GetMoviesByCategoryResponse.prototype.clearMoviesList = function() {
  return this.setMoviesList([]);
};


goog.object.extend(exports, proto);
