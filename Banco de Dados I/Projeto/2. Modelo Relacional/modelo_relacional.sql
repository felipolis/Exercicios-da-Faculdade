
DROP TABLE IF EXISTS USUARIO_ACOMPANHA_LIVROS;
DROP TABLE IF EXISTS LIVRO_TEM_CAPITULOS;
DROP TABLE IF EXISTS LIVRO_ESCRITO_POR;
DROP TABLE IF EXISTS LIVRO_GENERO;
DROP TABLE IF EXISTS USUARIO_ACOMPANHA_SERIES;
DROP TABLE IF EXISTS SERIE_TEM_TEMPORADAS;
DROP TABLE IF EXISTS TEMPORADA_TEM_EPISODIOS;
DROP TABLE IF EXISTS SERIE_GENERO;
DROP TABLE IF EXISTS SERIE_PLATAFORMA;
DROP TABLE IF EXISTS SERIE_ATORES;
DROP TABLE IF EXISTS TRABALHA_PARA;
DROP TABLE IF EXISTS USUARIO_ACOMPANHA_FILMES;
DROP TABLE IF EXISTS FILME_PLATAFORMA;
DROP TABLE IF EXISTS FILME_ATORES;
DROP TABLE IF EXISTS FILME_GENERO;

DROP TABLE IF EXISTS USUARIOS;
DROP TABLE IF EXISTS LIVROS;
DROP TABLE IF EXISTS CAPITULOS;
DROP TABLE IF EXISTS AUTORES;
DROP TABLE IF EXISTS SERIES;
DROP TABLE IF EXISTS TEMPORADAS;
DROP TABLE IF EXISTS EPISODIOS;
DROP TABLE IF EXISTS PREMIOS;
DROP TABLE IF EXISTS ATORES;
DROP TABLE IF EXISTS DIRETORES;
DROP TABLE IF EXISTS PRODUTORAS;
DROP TABLE IF EXISTS FILMES;
DROP TABLE IF EXISTS PLATAFORMAS;
DROP TABLE IF EXISTS GENEROS;

/*--------------------------------------------------RELAÇÕES-------------------------------------------------------------*/
CREATE TABLE USUARIOS (
    USUARIO VARCHAR(50) NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    SOBRENOME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    SENHA VARCHAR(50) NOT NULL
);

CREATE TABLE LIVROS (
    ID INTEGER NOT NULL PRIMARY KEY,

    STATUS ENUM('Lendo', 'Lido', 'Quero Ler') NOT NULL,
    CAPITULOS INTEGER NOT NULL,
    TITULO VARCHAR(50) NOT NULL,
    AUTOR VARCHAR(50) NOT NULL,
    EDITORA VARCHAR(50) NOT NULL,
    ANO INTEGER NOT NULL
);

CREATE TABLE CAPITULOS (
    ID INTEGER NOT NULL PRIMARY KEY,

    TITULO VARCHAR(50) NOT NULL,
    PAGINAS INTEGER NOT NULL,
    STATUS ENUM('Lido', 'Não lido') NOT NULL

);

CREATE TABLE AUTORES (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    SOBRENOME VARCHAR(50) NOT NULL,
    NACIONALIDADE VARCHAR(50) NOT NULL
);


CREATE TABLE SERIES (
    ID INTEGER NOT NULL PRIMARY KEY,

    TITULO VARCHAR(50) NOT NULL,
    ANO INTEGER NOT NULL,
    TEMPORADAS INTEGER NOT NULL,
    NOTA_IMDB INTEGER NOT NULL,
    CAPITULOS INTEGER NOT NULL,
    STATUS ENUM('Assistindo', 'Assistida', 'Quero Assistir') NOT NULL
);

CREATE TABLE TEMPORADAS (
    ID INTEGER NOT NULL PRIMARY KEY,

    STATUS ENUM('Assistindo', 'Assistida', 'Não assistida') NOT NULL,
    EPISODIOS INTEGER NOT NULL
);

CREATE TABLE EPISODIOS (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    DURAÇÃO INTEGER NOT NULL,
    STATUS ENUM('Assistido', 'Não assistido') NOT NULL
);

CREATE TABLE ATORES (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    SOBRENOME VARCHAR(50) NOT NULL,
    NACIONALIDADE VARCHAR(50) NOT NULL,
    PERSONAGEM VARCHAR(50) NOT NULL
);

CREATE TABLE PREMIOS (
    ID_ATOR INTEGER NOT NULL,

    NOME VARCHAR(50) NOT NULL,
    ANO INTEGER NOT NULL,
    CATEGORIA VARCHAR(50) NOT NULL,

    FOREIGN KEY (ID_ATOR) REFERENCES ATORES(ID) ON DELETE CASCADE,
    PRIMARY KEY (ID_ATOR, NOME, ANO, CATEGORIA)
);

CREATE TABLE DIRETORES (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    SOBRENOME VARCHAR(50) NOT NULL,
    NACIONALIDADE VARCHAR(50) NOT NULL,
    FILMES_DIRIGIDOS INTEGER NOT NULL
);

CREATE TABLE PRODUTORAS (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    ESTUDIO VARCHAR(50) NOT NULL
);


CREATE TABLE FILMES (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    ANO INTEGER NOT NULL,
    DURAÇÃO INTEGER NOT NULL,
    NOTA_IMDB INTEGER NOT NULL,
    STATUS ENUM('Assistido', 'Quero Assistir') NOT NULL
);

CREATE TABLE PLATAFORMAS (
    ID INTEGER NOT NULL PRIMARY KEY,

    NOME VARCHAR(50) NOT NULL,
    LINK VARCHAR(50) NOT NULL
);

CREATE TABLE GENEROS (
    ID INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL
);

/*--------------------------------------------------RELAÇÕES-------------------------------------------------------------*/

CREATE TABLE USUARIO_ACOMPANHA_LIVROS (
    USUARIO VARCHAR(50) NOT NULL,
    ID_LIVRO INTEGER NOT NULL,

    FOREIGN KEY (USUARIO) REFERENCES USUARIOS(USUARIO),
    FOREIGN KEY (ID_LIVRO) REFERENCES LIVROS(ID),

    PRIMARY KEY (USUARIO, ID_LIVRO)
);

CREATE TABLE LIVRO_TEM_CAPITULOS (
    ID_LIVRO INTEGER NOT NULL,
    ID_CAPITULO INTEGER NOT NULL,

    FOREIGN KEY (ID_LIVRO) REFERENCES LIVROS(ID),
    FOREIGN KEY (ID_CAPITULO) REFERENCES CAPITULOS(ID),

    PRIMARY KEY (ID_LIVRO, ID_CAPITULO)
);

CREATE TABLE LIVRO_ESCRITO_POR (
    ID_LIVRO INTEGER NOT NULL,
    ID_AUTOR INTEGER NOT NULL,

    FOREIGN KEY (ID_LIVRO) REFERENCES LIVROS(ID),
    FOREIGN KEY (ID_AUTOR) REFERENCES AUTORES(ID),

    PRIMARY KEY (ID_LIVRO, ID_AUTOR)
);

CREATE TABLE LIVRO_GENERO (
    ID_LIVRO INTEGER NOT NULL,
    ID_GENERO INTEGER NOT NULL,

    FOREIGN KEY (ID_LIVRO) REFERENCES LIVROS(ID),
    FOREIGN KEY (ID_GENERO) REFERENCES GENEROS(ID),

    PRIMARY KEY (ID_LIVRO, ID_GENERO)
);


CREATE TABLE USUARIO_ACOMPANHA_SERIES (
    USUARIO VARCHAR(50) NOT NULL,
    ID_SERIE INTEGER NOT NULL,

    FOREIGN KEY (USUARIO) REFERENCES USUARIOS(USUARIO),
    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID),

    PRIMARY KEY (USUARIO, ID_SERIE)
);

CREATE TABLE SERIE_TEM_TEMPORADAS (
    ID_SERIE INTEGER NOT NULL,
    ID_TEMPORADA INTEGER NOT NULL,

    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID),
    FOREIGN KEY (ID_TEMPORADA) REFERENCES TEMPORADAS(ID),

    PRIMARY KEY (ID_SERIE, ID_TEMPORADA)
);

CREATE TABLE TEMPORADA_TEM_EPISODIOS (
    ID_TEMPORADA INTEGER NOT NULL,
    ID_EPISODIO INTEGER NOT NULL,

    FOREIGN KEY (ID_TEMPORADA) REFERENCES TEMPORADAS(ID),
    FOREIGN KEY (ID_EPISODIO) REFERENCES EPISODIOS(ID),

    PRIMARY KEY (ID_TEMPORADA, ID_EPISODIO)
);

CREATE TABLE SERIE_GENERO (
    ID_SERIE INTEGER NOT NULL,
    ID_GENERO INTEGER NOT NULL,

    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID),
    FOREIGN KEY (ID_GENERO) REFERENCES GENEROS(ID),

    PRIMARY KEY (ID_SERIE, ID_GENERO)
);

CREATE TABLE SERIE_PLATAFORMA (
    ID_SERIE INTEGER NOT NULL,
    ID_PLATAFORMA INTEGER NOT NULL,

    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID),
    FOREIGN KEY (ID_PLATAFORMA) REFERENCES PLATAFORMAS(ID),

    PRIMARY KEY (ID_SERIE, ID_PLATAFORMA)
);

CREATE TABLE SERIE_ATORES (
    ID_SERIE INTEGER NOT NULL,
    ID_ATOR INTEGER NOT NULL,

    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID),
    FOREIGN KEY (ID_ATOR) REFERENCES ATORES(ID),

    PRIMARY KEY (ID_SERIE, ID_ATOR)
);

CREATE TABLE TRABALHA_PARA (
    ID_ATOR INTEGER NOT NULL,
    ID_DIRETOR INTEGER NOT NULL,
    ID_PRODUTORA INTEGER NOT NULL,

    FOREIGN KEY (ID_ATOR) REFERENCES ATORES(ID),
    FOREIGN KEY (ID_DIRETOR) REFERENCES DIRETORES(ID),
    FOREIGN KEY (ID_PRODUTORA) REFERENCES PRODUTORAS(ID),

    PRIMARY KEY (ID_ATOR ,ID_DIRETOR, ID_PRODUTORA)
);

CREATE TABLE USUARIO_ACOMPANHA_FILMES (
    USUARIO VARCHAR(50) NOT NULL,
    ID_FILME INTEGER NOT NULL,

    FOREIGN KEY (USUARIO) REFERENCES USUARIOS(USUARIO),
    FOREIGN KEY (ID_FILME) REFERENCES FILMES(ID),

    PRIMARY KEY (USUARIO, ID_FILME)
);

CREATE TABLE FILME_PLATAFORMA (
    ID_FILME INTEGER NOT NULL,
    ID_PLATAFORMA INTEGER NOT NULL,

    FOREIGN KEY (ID_FILME) REFERENCES FILMES(ID),
    FOREIGN KEY (ID_PLATAFORMA) REFERENCES PLATAFORMAS(ID),

    PRIMARY KEY (ID_FILME, ID_PLATAFORMA)
);

CREATE TABLE FILME_ATORES (
    ID_FILME INTEGER NOT NULL,
    ID_ATOR INTEGER NOT NULL,

    FOREIGN KEY (ID_FILME) REFERENCES FILMES(ID),
    FOREIGN KEY (ID_ATOR) REFERENCES ATORES(ID),

    PRIMARY KEY (ID_FILME, ID_ATOR)
);

CREATE TABLE FILME_GENERO (
    ID_FILME INTEGER NOT NULL,
    ID_GENERO INTEGER NOT NULL,

    FOREIGN KEY (ID_FILME) REFERENCES FILMES(ID),
    FOREIGN KEY (ID_GENERO) REFERENCES GENEROS(ID),

    PRIMARY KEY (ID_FILME, ID_GENERO)
);
